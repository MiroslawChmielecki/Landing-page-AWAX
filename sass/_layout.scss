.container {
  width: 100%;
  max-width: 1170px;
  margin: 0 auto;
  padding-left: 15px;
  padding-right: 15px;
}

.container-fluid {
  width: 100%;
  padding-left: 15px;
  padding-right: 15px;
}

.row {
  display: flex;
  flex-wrap: wrap;
}

@mixin grid($prefix) {
  @for $i from 1 through 12 {
    .col-#{$prefix}-#{$i} {
      $width: 100% / 12 * $i;
      flex: 0 0 $width;
      max-width: $width;
    }
  }
}

@media (max-width: 575.98px) {
  @include grid("xs");
}
@media (min-width: 576px) and (max-width: 767.98px) {
  @include grid("sm");
}
@media (min-width: 768px) and (max-width: 991.98px) {
  @include grid("md");
}
@media (min-width: 992px) and (max-width: 1199.98px) {
  @include grid("lg");
}
@media (min-width: 1200px) {
  @include grid("xl");
}

$grid-columns: 12;
$grid-offset-columns: 12;

@for $i from 1 through $grid-columns {
  .col-#{$i} {
    width: percentage($i / $grid-columns);
  }
}

@for $i from 1 through $grid-offset-columns {
  .col-offset-#{$i} {
    margin-left: percentage($i / $grid-offset-columns);
  }
}

$breakpoints: (
  "extra-small": (
    max-width: 575.98px
  ),
  "small": (
    max-width: 767.98px
  ),
  "medium": (
    max-width: 991.98px
  ),
  "large": (
    max-width: 1199.98px
  )
) !default;

@mixin respond-to($breakpoint) {
  // If the key exists in the map
  @if map-has-key($breakpoints, $breakpoint) {
    // Prints a media query based on the value
    @media #{inspect(map-get($breakpoints, $breakpoint))} {
      @content;
    }
  }
  // If the key doesn't exist in the map
  @else {
    @warn "Unfortunately, no value could be retrieved from `#{$breakpoint}`. "
          + "Available breakpoints are: #{map-keys($breakpoints)}.";
  }
}
